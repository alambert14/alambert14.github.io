<!DOCTYPE html>
<!-- SPEED CONTROLLERS -->
<html>
<head>
	<title>Speed Controllers</title>
	<link rel="stylesheet" type="text/css" href="../style.css">
	<link href="https://fonts.googleapis.com/css?family=Patrick+Hand" rel="stylesheet">
	<link href="https://fonts.googleapis.com/css?family=Khula" rel="stylesheet">
	<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
	<link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png">
	<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
	
</head>
<body>
	<div class="top">
	<div class="header">
		How to Java:
		<img src="../circles2.png">
	</div>
	
	<div class="sticky-nav">
		<ul class="clearfix">
			<li><a href="../">Home</a></li>
			<li><a href="../setting-up">Setting Up</a></li>
			<li><a href="../control-system">FRC Control System</a></li>
			<li><a href="../java-programming">Java Programming</a></li>
			<li><a href="#">Git</a></li>
		</ul>
	</div>
	</div>
	
	<div class="main">
		<div class="nav">
			<h2>Next: <a href="pneumatics.html">Pneumatic System</a></h2>
		<ul class="dropdown">
			<li><a href="../">Home</a></li>
			<li><a href="../setting-up">Setting Up</a><button class="accordion"></button>
				<ul class="panel">
					<li><a href="../setting-up/update-suite.html">Installing the FRC Update Suite</a></li>
					<li><a href="../setting-up/">Installing Java</a></li>
					<li><a href="../setting-up/installing-eclipse.html">Installing Eclipse and Plugins</a></li>
				</ul>
			</li>
			<li><a href="../control-system">FRC Control System</a><button class="accordion"></button>
				<ul class="panel">
					<li><a href="roborio.html">roboRIO</a></li>
					<li><a href="pdp.html">Power Distribution Panel</a></li>
					<li><a href="#">Speed Controllers</a></li>
					<li><a href="pneumatics.html">Pneumatics</a></li>
					<li><a href="vrm.html">VRM</a></li>
					<li><a href="radio.html">Wireless Radio</a></li>
				</ul>
			</li>
			<li><a href="../java-programming">Java Programming</a><button class="accordion"></button>
				<ul class="panel">
					<li><a href="../java-programming/eclipse.html">Using Eclipse</a></li>
					<li><a href="../java-programming/api.html">WPILib API</a></li>
					<li><a href="../java-programming/subsystems.html">Subsystems</a></li>
					<li><a href="../java-programming/commands.html">Commands</a></li>
					<li><a href="../java-programming/robotmap.html">RobotMap</a></li>
					<li><a href="../java-programming/oi.html">OI</a></li>
					<li><a href="../java-programming/robot.html">Robot.java</a></li>
				</ul>
			</li>
			<li><a href="#">Git</a><button class="accordion"></button>
				<ul class="panel">
					<li><a href="#">Repositories</a></li>
					<li><a href="#">GitHub</a></li>
					<li><a href="#">Setting Up a Git Repository</a></li>
					<li><a href="#">Branching</a></li>
					<li><a href="#">Staging</a></li>
					<li><a href="#">Committing</a></li>
					<li><a href="#">Pushing and Pulling</a></li>
					<li><a href="#">Merging</a></li>
				</ul>
			</li>
		</ul>
		</div>
		<div class="confoot">
			<div class="content">
				<h1>Speed (Motor) Controllers</h1>
				<p>Speed controllers are one of the most common components on the robot, and one of the ones you will actually be programming. For a quick overview, check out this powerpoint:</p>
				<p>Speed controllers come in many flavors, but the most common (at least for Team 2035) these days are Victor SPs (shown) and Talon SRXs. They look very similar, but it is important not to confuse them. Talons are a lot more expensive, but they have much more capabilities. However, Victors are perfectly okay for basic speed controller functionality.</p>
				<img src="../Pictures/victorsp.jpg" height="33%" width="33%" style="float:right">
				<p>So this begs the question: what do speed controllers even do? To be frank, they control the speed of a motor. More specifically, they allow a motor to be programmable, as they would not be otherwise. It would be pretty difficult to program a raw motor (it probably would include some sort of binary or something), but with a speed controller, you can set an exact decimal speed from -1 to 1. The way it does this is pretty simple, using what is called PWM control.</p>
				<p>PWM stands for Pulse Width Modulation. This means that instead of sending one constant stream of current to the motor, the controller pulses the electricity in order to create an illusion of the motor moving consistently at a slower pace. This is why speed controllers are connected to the roboRIO through PWM cables that allow the programming data to be sent to the controller.</p>
				<p>We will go over how to program a speed controller in depth later on, but first it is important to try and understand how the component works.</p>
				
			</div>
			<div class="footer">
				<a href="../questions.html">Questions?</a>
				<a href="https://wpilib.screenstepslive.com/s/4485" target="_blank">WPI ScreenSteps Live</a>
				<a href="http://first.wpi.edu/FRC/roborio/release/docs/java/" target="_blank">WPILib API</a>
				<a href="http://team2035.rocks/" target="_blank">Team 2035's Website</a>
			</div><!--footer-->
		</div><!--confoot-->
	
	</div>
	

<script>
	var acc = document.getElementsByClassName("accordion");
	var i;

	for (i = 0; i < acc.length; i++) {
		acc[i].onclick = function(){
			this.classList.toggle("active");
			var panel = this.nextElementSibling;
			if (panel.style.display === "block") {
				panel.style.display = "none";
			} else {
				panel.style.display = "block";
			}
		}
	}
	</script>
	
</body>
</html>
